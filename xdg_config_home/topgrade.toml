# Silence bug https://github.com/topgrade-rs/topgrade/issues/288
skip_notify = true

# Don't ask for confirmations
#assume_yes = true

# Disable specific steps - same options as the command line flag
disable = ["containers", "gnome_shell_extensions", "vim"]

# Ignore failures for these steps
#ignore_failures = ["powershell"]

# Run specific steps - same options as the command line flag
#only = ["system", "emacs"]

# Do not ask to retry failed steps (default: false)
no_retry = true

# Run inside tmux
#run_in_tmux = true

# List of remote machines with Topgrade installed on them
#remote_topgrades = ["toothless", "pi", "parnas"]

# Arguments to pass SSH when upgrading remote systems
ssh_arguments = "-o ConnectTimeout=2"

# Path to Topgrade executable on remote machines
#remote_topgrade_path = [".cargo/bin/topgrade"]

# Arguments to pass tmux when pulling Repositories
#tmux_arguments = "-S /var/tmux.sock"

# Do not set the terminal title
#set_title = false

# Cleanup temporary or old files
cleanup = true

[brew]
# I used to use --greedy.  I'm having problems upgrading Chrome and Firefox.
# => Remove --greedy, and let the browsers self-update.
#greedy_cask = true

# Custom commands
[commands]
"bash-completion for rustup" = "rustup completions bash > $(brew --prefix)/etc/bash_completion.d/rustup.bash-completion"
"bash-completion for cargo" = "rustup completions bash cargo >> ~/.local/share/bash-completion/completions/cargo"
"pip3 itself" = "pip3 install -U pip"
"pip3 packages" = "pip3 freeze --local | cut -d = -f 1 | xargs -n1 pip3 install -U -q"
"vim plugins" = "~/.vim/update_bundles.sh"
"pre-commit" = "cd ~/.config/git && pre-commit autoupdate && pre-commit install-hooks"

[composer]
#self_update = true

[firmware]
# Offer to update firmware; if false just check for and display available updates
#upgrade = true

[flatpak]
# Use sudo for updating the system-wide installation
#use_sudo = true

[git]
max_concurrency = 5
# Additional git repositories to pull
repos = [
    "~/yroyon-dotfiles/",
]

# Arguments to pass Git when pulling Repositories
arguments = "--rebase --autostash --recurse-submodule=yes"

# Go
# NOTE: To update Go programs, topgrade needs 3rd party tool go-global-update
#       go install https://github.com/Gelio/go-global-update

[linux]
# Arch Package Manager to use. Allowed values: autodetect, trizen, paru, yay, pacman.
#arch_package_manager = "pacman"
# Arguments to pass yay (or paru) when updating packages
#yay_arguments = "--nodevel"
#show_arch_news = true
#trizen_arguments = "--devel"
#enable_tlmgr = true
#emerge_sync_flags = "-q"
#emerge_update_flags = "-uDNa --with-bdeps=y world"
#redhat_distro_sync = false
#rpm_ostree = false

[npm]
# Use sudo if the NPM directory isn't owned by the current user
#use_sudo = true

# Commands to run before anything
[pre_commands]
#"Emacs Snapshot" = "rm -rf ~/.emacs.d/elpa.bak && cp -rl ~/.emacs.d/elpa ~/.emacs.d/elpa.bak"

[windows]
# Manually select Windows updates
#accept_all_updates = false
#open_remotes_in_new_terminal = true

# Causes Topgrade to rename itself during the run to allow package managers
# to upgrade it. Use this only if you installed Topgrade by using a package
# manager such as Scoop to Cargo
#self_rename = true

